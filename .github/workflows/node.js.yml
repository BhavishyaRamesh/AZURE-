name: Node.js CI

on:
  push:
    branches:
        - master
jobs:
  sonarqube:
     runs-on: ubuntu-latest
     strategy:
      matrix:
        node-version: [16.14.0 ]
     steps:
       - uses: actions/setup-node@v2
         with:
           node-version: ${{ matrix.node-version }}
           cache: 'npm'
       - run: npm update
       - run: npm ci
  
  #   - name: Upload Artifact
  #     uses: actions/upload-artifact@v3
  #     with:
  #        name: build
  #        path: build  
       - id: latest
         if: failure()
         uses: thebritican/fetch-latest-release@v1.0.3
         with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

       - uses: actions/checkout@v2
         if: failure()
         with: 
            ref: ${{ steps.latest.outputs.tag_name }}         
    
       - id: create_release
         if: failure()
         uses: actions/create-release@v1.0.0
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           tag_name: ${{ steps.latest.outputs.tag_name }}
           release_name: ${{ steps.latest.outputs.tag_name }}
           draft: true
           prerelease: true
  
   
  release-content:
     name: 'Release'
     runs-on: ubuntu-latest 
     needs: [ sonarqube ]
     steps:
       - name: Download Artifacts
         uses: actions/download-artifact@v3
         with:
             name: build
             path: build 
       - name: Test-artifact
         run: ls -R
       - name: Tag
         id: autotagger
         uses: butlerlogic/action-autotag@stable
         with:
           GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        
       - name: Release
         id: create_release
         uses: actions/create-release@v1.0.0
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            tag_name: V${{ github.run_number }}
            release_name: V${{ github.run_number }}
            body: ${{ github.run_number }}
     
           
  
      
