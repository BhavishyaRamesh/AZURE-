name: Node.js CI

on:
  push:
    branches:
        - master
jobs:
  sonarqube:
     runs-on: ubuntu-latest
     strategy:
      matrix:
        node-version: [16.14.0 ]
     steps:
       - uses: actions/checkout@v2
         with:
           node-version: ${{ matrix.node-version }}
           cache: 'npm'
       - run: npm update
       - run: npm ci
  
     
       - id: latest
         if: failure()
         uses: thebritican/fetch-latest-release@v1.0.3
         with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

 #      - uses: actions/checkout@v2
 #        if: failure()
 #        with: 
 #           ref: ${{ steps.latest.outputs.tag_name }}         
    
       - id: create_release
         if: failure()
         uses: actions/create-release@v1.0.0
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
           tag_name: ${{ steps.latest.outputs.tag_name }}
           release_name: ${{ steps.latest.outputs.tag_name }}
           draft: true
           prerelease: true
       - name: Send mail
         if: always()
         uses: dawidd6/action-send-mail@v2
         with:
    # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          secureConnection: false
    # user credentials
          username: ramesh@worksitebas.com
          password: abgr ndqa qcjh bhbh
    # email subject
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
    # email body as text
          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
    # comma-separated string, send email to
          to: bhavishyaramesh02@gmail.com
    # from email name
          from: OMHealth 
  
   
  release-content:
     name: 'Release'
     runs-on: ubuntu-latest 
     needs: [ sonarqube ]
     steps:
       - name: Release
         id: create_release
         uses: actions/create-release@v1.0.0
         env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
         with:
            tag_name: V${{ github.run_number }}
            release_name: V${{ github.run_number }}
            body: ${{ github.run_number }}
     
           
  
      
