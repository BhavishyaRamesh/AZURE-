name: Node.js CI

on:
  push:
    branches:
        - master

jobs:
  SonarQube:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x ]
    steps:
   # - uses: actions/checkout@v2
   #   with:
   #       fetch-depth: 0
   # - uses: sonarsource/sonarqube-scan-action@master
   #   env:
   #     SONAR_TOKEN: 340c687101aa465b7760cff37a3656da027d6928
   #     SONAR_HOST_URL: https://75eb-14-98-199-230.ngrok.io 
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
   # - uses: sonarsource/sonarqube-quality-gate-action@master
   #   name: SonarQube Quality Gate check
   #   timeout-minutes: 5
   #   env:
   #       SONAR_TOKEN: 340c687101aa465b7760cff37a3656da027d6928
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - uses: actions/checkout@v2
      with:
          token: ${{ secrets.GITHUB_TOKEN }}
    - run: ./test/SonarQube.sh
      timeout-minutes: 5
    services:
      sonarqube:
        image: sonarqube:8.9-community
        ports:
          - 9000:9000
    
    #- id: latest
    #  if: failure()
    #  uses: thebritican/fetch-latest-release@v1.0.3
     # with:
         # github_token: ${{ secrets.GITHUB_TOKEN }}

   # - uses: actions/checkout@v2
     # if: failure()
     # with: 
         # ref: ${{ steps.latest.outputs.tag_name }}         
    
    #- id: create_release
     # if: failure()
     # uses: actions/create-release@v1.0.0
     # env:
     #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # with:
        # tag_name: ${{ steps.latest.outputs.tag_name }}
        # release_name: ${{ steps.latest.outputs.tag_name }}
        # draft: true
        # prerelease: true
  
    - name: Send mail
      if: always()
      uses: dawidd6/action-send-mail@v2
      with:
    # mail server settings
         server_address: smtp.gmail.com
         server_port: 465
    # user credentials
         username: bhavishyaramesh02@gmail.com
         password: uwxxvjgrythvmhcn
    # email subject
         subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
    # email body as text
         body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}
    # comma-separated string, send email to
         to: bhavishyaramesh02@gmail.com 
    # from email name
         from: GitHub
    
  #release-content:
  #    name: 'Release'
  #    runs-on: ubuntu-latest 
  #    needs: [ build ]
  #    steps:
  #    - name: Tag
  #      id: autotagger
  #      uses: butlerlogic/action-autotag@stable
  #      with:
  #        GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      
   #   - name: Release
   #     id: create_release
   #     uses: actions/create-release@v1.0.0
   #     env:
   #        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
   #     with:
   #        tag_name: V${{ github.run_number }}
   #        release_name: V${{ github.run_number }}
   #        body: ${{ github.run_number }}
     
           
  
      
